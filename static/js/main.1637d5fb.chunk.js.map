{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","items","map","item","className","type","value","text","id","key","onChange","e","changeInput","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","filteredItems","filter","Date","now","preventDefault","newItem","newItems","console","log","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA8BeA,MA1Bf,SAAmBC,GACf,IACMD,EADMC,EAAMC,MACMC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,MAAOH,EAAKI,KACZC,GAAIL,EAAKM,IACTC,SAAU,SAACC,GAAD,OAAKX,EAAMY,YAAYD,EAAEE,OAAOP,MAAMH,EAAKM,QACrD,+BACA,cAAC,IAAD,CACAL,UAAU,UACVU,KAAK,QACLC,QAAS,kBAAIf,EAAMgB,WAAWb,EAAKM,cAVTN,EAAKM,QAc3C,OACI,8BACI,cAAC,IAAD,CAAUQ,SAAU,IAAKC,OAAO,cAAhC,SACCnB,O,eCnBboB,IAAQC,IAAIC,K,IAoEGC,E,kDAlEb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXtB,MAAM,GACNuB,YAAY,CACVjB,KAAK,GACLE,IAAI,KAGR,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,YAAY,EAAKA,YAAYc,KAAjB,gBAZN,E,+CAcb,SAAYnB,EAAKE,GACf,IAAMR,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKM,MAAQA,IACdN,EAAKI,KAAKA,MAEdqB,KAAKC,SAAS,CAAC5B,MAAMA,M,wBAEvB,SAAWQ,GACT,IAAMqB,EAAeF,KAAKL,MAAMtB,MAAM8B,QAAO,SAAA5B,GAAI,OAC/CA,EAAKM,MAAOA,KAEdmB,KAAKC,SAAS,CAAC5B,MAAM6B,M,yBAEvB,SAAYnB,GACViB,KAAKC,SAAS,CAACL,YAAY,CACzBjB,KAAKI,EAAEE,OAAOP,MACdG,IAAIuB,KAAKC,W,qBAGb,SAAQtB,GACNA,EAAEuB,iBACF,IAAMC,EAAQP,KAAKL,MAAMC,YACzB,GAAkB,KAAfW,EAAQ5B,KAAU,CACnB,IAAM6B,EAAS,GAAD,mBAAKR,KAAKL,MAAMtB,OAAhB,CAAsBkC,IACpCP,KAAKC,SAAS,CAAC5B,MAAMmC,EAASZ,YAAY,CACxCf,IAAI,GACJF,KAAK,MAGT8B,QAAQC,IAAIV,KAAKL,MAAMtB,S,oBAEzB,WACA,OACE,sBAAKG,UAAU,MAAf,UACA,iCACE,uBAAMI,GAAG,aAAa+B,SAAUX,KAAKD,QAArC,UACE,4CACA,uBAAOtB,KAAK,OACZmC,YAAY,kBACZlC,MAAOsB,KAAKL,MAAMC,YAAYjB,KAC9BG,SAAUkB,KAAKH,cAEf,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CACAJ,MAAO2B,KAAKL,MAAMtB,MAClBe,WAAYY,KAAKZ,WACjBJ,YAAagB,KAAKhB,qB,GAhEJ6B,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1637d5fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\nfunction ListItems(props){\r\n    const items=props.items;\r\n    const ListItems = items.map(item=>{\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" \r\n                value={item.text} \r\n                id={item.key}\r\n                onChange={(e)=>props.changeInput(e.target.value,item.key)}></input>\r\n                <span>\r\n                <FontAwesomeIcon \r\n                className=\"faicons\" \r\n                icon=\"trash\"\r\n                onClick={()=>props.deleteItem(item.key)}/>\r\n            </span></p> \r\n        </div>\r\n    })\r\n    return(\r\n        <div>\r\n            <FlipMove duration={400} easing=\"ease-in-out\">\r\n            {ListItems}\r\n            </FlipMove>\r\n            </div>\r\n    )    \r\n}\r\n\r\nexport default ListItems;","import React from 'react';\nimport './App.css' ;\nimport ListItems from './ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTrash);\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.changeInput=this.changeInput.bind(this);\n  }\n  changeInput(text,key){\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key === key){\n        item.text=text;\n      }})\n    this.setState({items:items})\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item=>\n      item.key!== key\n    )\n    this.setState({items:filteredItems})\n  }\n  handleInput(e){\n    this.setState({currentItem:{\n      text:e.target.value,\n      key:Date.now()\n    }})\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem=this.state.currentItem ;\n    if(newItem.text!==''){\n      const newItems=[...this.state.items,newItem]\n      this.setState({items:newItems,currentItem:{\n        key:'',\n        text:''\n      }})\n    }\n    console.log(this.state.items)\n  }\n  render(){\n  return(\n    <div className=\"App\">\n    <header>\n      <form id=\"to-do-form\" onSubmit={this.addItem}>\n        <h1>To-do List</h1>\n        <input type=\"text\" \n        placeholder=\"Enter Text here\"\n        value={this.state.currentItem.text}\n        onChange={this.handleInput} \n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </header>\n    <ListItems \n    items={this.state.items}\n    deleteItem={this.deleteItem}\n    changeInput={this.changeInput}></ListItems>\n    </div>\n  )}}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}